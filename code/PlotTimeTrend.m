clc, clear, close all

n_times_parallel = [0.019, 0.027, 0.015, 0.022 ;...
            0.093, 0.04,  0.077, 0.053 ;...
            0.07,  0.067, 0.076, 0.098 ;...
            0.117, 0.093, 0.153, 0.203 ;...
            0.201, 0.314, 0.188, 0.25  ;...
            0.496, 0.42,  0.482, 0.447 ;...
            1.074, 1.025, 1.048, 0.98  ;...
            2.02,  1.756, 1.868, 1.862 ;...
            2.5,   2.598, 2.631, 2.498];

n_times_serial = [0.00360, 0.00420, 0.00400, 0.00440 ;...
            0.00640, 0.00620, 0.00600, 0.00620 ;...
            0.01120, 0.01180, 0.01160, 0.01260 ;...
            0.02780, 0.02720, 0.02880, 0.03300 ;...
            0.12060, 0.08860, 0.09100, 0.10240 ;...
            0.43160, 0.42900, 0.43160, 0.43240 ;...
            1.53200, 1.53460, 1.60460, 1.56540 ;...
            3.21260, 3.22380, 3.47400, 3.77820 ;...
            5.69560, 5.16840, 6.04680, 5.55100];

n_size = [50, 100, 150, 200, 300, 500, 700, 900, 1000];

time_std_parallel = zeros(size(n_times_parallel, 1), 1);
time_ave_parallel = zeros(size(n_times_parallel, 1), 1);
time_std_serial = zeros(size(n_times_parallel, 1), 1);
time_ave_serial = zeros(size(n_times_parallel, 1), 1);


for row = 1:size(n_times_parallel, 1) 
    time_std_parallel(row) = std(n_times_parallel(row, :));
    time_ave_parallel(row) = mean(n_times_parallel(row, :));
    time_std_serial(row) = std(n_times_serial(row, :));
    time_ave_serial(row) = mean(n_times_serial(row, :));
end


figure('Renderer', 'painters', 'Position', [10 10 900 600])
hold on
errorbar(n_size, time_ave_parallel, time_std_parallel)
errorbar(n_size, time_ave_serial, time_std_serial)
title("Timing matrix multiplication")
xlabel("Matrix size [N^2]")
ylabel("Time [s]")

